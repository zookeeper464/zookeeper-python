import sys
read = sys.stdin.readline
arr = []
 
N = int(read())
maxD = [[0 for _ in range(3)] for _ in range(2)]
minD = [[0 for _ in range(3)] for _ in range(2)]
for i in range(N):
    temp = list(map(int, read().split()))
 
    maxD[1][0] = max(maxD[0][0], maxD[0][1]) + temp[0]
    minD[1][0] = min(minD[0][0], minD[0][1]) + temp[0]
 
    maxD[1][1] = max(maxD[0][0], maxD[0][1], maxD[0][2]) + temp[1]
    minD[1][1] = min(minD[0][0], minD[0][1], minD[0][2]) + temp[1]
 
    maxD[1][2] = max(maxD[0][1], maxD[0][2]) + temp[2]
    minD[1][2] = min(minD[0][1], minD[0][2]) + temp[2]
 
    maxD[0][0], maxD[0][1], maxD[0][2] = maxD[1][0], maxD[1][1], maxD[1][2]
    minD[0][0], minD[0][1], minD[0][2] = minD[1][0], minD[1][1], minD[1][2]
 
print(max(maxD[1]), min(minD[1]))

#메모리 초과의 이유 알아보자.
#위는 정답 코드
#아래는 내 코드
# 위의 코드는 입력 받는 동시에 메모리 저장 공간을 키우지 않음
# 시작부터 메모리를 6칸으로 고정하고 거기에서 파생되는 수 변화만 고려함
"""
import sys
input = sys.stdin.readline
n = int(input())
s = [list(map(int, input().split())) for i in range(n)]
lax, cax, rax = s[0][0], s[0][1], s[0][2]
lin, cin, rin = s[0][0], s[0][1], s[0][2]
for i in range(1, n):
  lax, cax, rax = max(lax, cax) + s[i][0], max(lax, cax, rax) + s[i][1], max(cax, rax) + s[i][2]
  lin, cin, rin = min(lin, cin) + s[i][0], min(lin, cin, rin) + s[i][1], min(cin, rin) + s[i][2]
print(max(lax, cax, rax), min(lin, cin, rin))
"""
